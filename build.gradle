apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

def defaultEncoding = 'UTF-8'
[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

targetCompatibility = 1.6
sourceCompatibility = 1.6
group = 'org.uranoplums'
archivesBaseName = 'uranoplums'
version = '1.1'

dependencies {
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
    compile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.2'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.7'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // At first, follow in reflesh compile `scope' and jar to local.
    // group: 'org.atilika.kuromoji', name: 'kuromoji', version: '0.7.7'
    //testCompile group: 'org.atilika.kuromoji', name: 'kuromoji', version: '0.7.7'
}

repositories {
    //maven {
    //    // Atilika Open Source repository (for kuromoji)
    //    url "http://www.atilika.org/nexus/content/repositories/atilika"
    //}
    mavenCentral()
    mavenLocal()
}

// maven ローカルリポジトリのパス
ext {
    mavenRepository = "${buildDir}/maven"
}

test {
    systemProperties 'property': 'value'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    //archives javadocJar
}

jar {
    manifest {
        attributes 'Implementation-Title': 'uranoplums Project',
                   'Implementation-Version': version
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

uploadArchives {
    repositories {
		mavenDeployer {
			repository(url: "file:${mavenRepository}")
		}
    }
}

[install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
	pom.project {
		inceptionYear '2015'
		packaging 'jar'
		licenses {
			license {
				name 'The Apache Software License, Version 2.0'
				url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
				distribution 'repo'
			}
		}
	}
}